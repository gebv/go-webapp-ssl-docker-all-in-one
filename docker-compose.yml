version: '2.4'
services:
  webapp:
    build:
      context: .
      target: 'webapp'
      dockerfile: Dockerfile
    env_file: .env
    container_name: webapp
    restart: unless-stopped
    ports:
      - 127.0.0.1:$APP_PORT:$APP_PORT
    environment:
      PORT: $APP_PORT

  certbot:
    image: certbot/certbot
    container_name: certbot
    env_file: .env
    volumes:
      - certbot-webroot:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - webserver80
    command: certonly --webroot --webroot-path=/var/www/html --email $LETSENCRYPT_EMAIL --agree-tos --no-eff-email -d $DOMAIN

  webserver80:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    env_file: .env
    ports:
      - "80:80"
    volumes:
      - certbot-webroot:/var/www/html
      - ./webserver80:/etc/nginx/conf.d/webserver80
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    command:
      - /bin/sh
      - -c
      - |
        rm -rf /etc/nginx/conf.d/default.conf
        envsubst '$$DOMAIN' < /etc/nginx/conf.d/webserver80 > /etc/nginx/conf.d/default.conf
        exec nginx -g 'daemon off;'

  webserver443:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    env_file: .env
    ports:
      - "443:443"
    volumes:
      - certbot-webroot:/var/www/html
      - ./webserver443:/etc/nginx/conf.d/webserver443
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    command:
      - /bin/sh
      - -c
      - |
        rm -rf /etc/nginx/conf.d/default.conf
        envsubst '$$DOMAIN $$APP_INTERNAL_URL' < /etc/nginx/conf.d/webserver443 > /etc/nginx/conf.d/default.conf
        exec nginx -g 'daemon off;'
    depends_on:
      - webapp

volumes:
  certbot-etc:
  certbot-var:
  certbot-webroot:
